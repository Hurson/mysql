<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:annotation-config />

	<tx:annotation-driven />
	<bean id="propertyConfigurer11"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:system.properties</value>	
			</list>
		</property>
	</bean>
	

	<bean id="dataSourceUi"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass"><value>${ui.jdbc.driverClass}</value></property>
		<property name="jdbcUrl"><value>${ui.jdbc.url}</value> </property>
		<property name="user" ><value>${ui.jdbc.username}</value></property>
		<property name="password"><value>${ui.jdbc.password}</value></property>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
	    <property name="initialPoolSize"><value>${c3p0.jdbc.initialPoolSize}</value></property>
	    <!--连接池中保留的最小连接数。-->
	    <property name="minPoolSize"><value>${c3p0.jdbc.minPoolSize}</value></property>
	    <!--连接池中保留的最大连接数。Default: 15 -->
	    <property name="maxPoolSize" ><value>${c3p0.jdbc.maxPoolSize}</value></property>
	    <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
	    <property name="maxIdleTime"><value>${c3p0.jdbc.maxIdleTime}</value></property>  
	    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
	    <property name="acquireIncrement"><value>${c3p0.jdbc.acquireIncrement}</value></property>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod"><value>${c3p0.jdbc.idleConnectionTestPeriod}</value></property>
		<property name="maxStatements">
			<value>${c3p0.jdbc.maxStatements}</value>
		</property>
		
		
		
		<property name="checkoutTimeout">
			<value>${c3p0.jdbc.checkoutTimeout}</value>
		</property>	
		 
		<property name="acquireRetryAttempts">
			<value>${c3p0.jdbc.acquireRetryAttempts}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${c3p0.jdbc.breakAfterAcquireFailure}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${c3p0.jdbc.testConnectionOnCheckin}</value>
		</property>

	</bean>
	<bean id="sessionFactoryUi"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSourceUi" />
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- 数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<!-- 显示Hibernate持久化操作所生成的SQL语句 -->
				<prop key="hibernate.show_sql">${c3p0.jdbc.hibernate.showsql}</prop>
				<!-- 将SQL脚本进行格式化后再输出 -->
				<prop key="hibernate.format_sql">${c3p0.jdbc.hibernate.formatsql}</prop>
				
				 <prop key="hibernate.connection.release_mode">auto</prop>                     
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.avit.ads.pushads.ui.bean.ui</value>
			</list>
		</property>
	</bean>
	
	
		<bean id="txManagerUi"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactoryUi" />
		</property>
	</bean>
	
    <tx:annotation-driven transaction-manager="txManagerUi"/> 
    
</beans>